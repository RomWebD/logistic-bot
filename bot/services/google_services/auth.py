import os
from google.auth.transport.requests import Request  # üëà –æ—Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —ñ–º–ø–æ—Ä—Ç!
from google.auth.exceptions import RefreshError
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow


from decouple import config

SCOPES = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive",
]


CREDENTIALS_PATH = config("GOOGLE_CREDS_PATH")

TOKEN_PATH = "secrets/token.pickle"  # —Ç—É—Ç –∑–±–µ—Ä–µ–∂–µ—Ç—å—Å—è access+refresh —Ç–æ–∫–µ–Ω


def get_credentials():
    creds = None

    if os.path.exists(TOKEN_PATH):
        try:
            creds = Credentials.from_authorized_user_file(TOKEN_PATH, SCOPES)
            if not creds.valid:
                if creds.expired and creds.refresh_token:
                    creds.refresh(Request())
                    # üî• –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏ —Ç–æ–∫–µ–Ω —É —Ñ–∞–π–ª
                    with open(TOKEN_PATH, "w") as token:
                        token.write(creds.to_json())
                else:
                    raise RefreshError("Invalid or expired credentials")
        except RefreshError:
            print("‚ö†Ô∏è Refresh token –ø—Ä–æ—Ç—É—Ö –∞–±–æ –≤—ñ–¥–∫–ª–∏–∫–∞–Ω–∏–π. –í–∏–¥–∞–ª—è—é —Ñ–∞–π–ª...")
            os.remove(TOKEN_PATH)
            creds = None

    # –Ø–∫—â–æ –Ω–µ–º–∞ —Ç–æ–∫–µ–Ω—É ‚Äî –∑–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
    if not creds:
        flow = InstalledAppFlow.from_client_secrets_file(CREDENTIALS_PATH, SCOPES)
        creds = flow.run_local_server(port=0)

        # –ó–±–µ—Ä–µ–≥—Ç–∏ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É
        with open(TOKEN_PATH, "w") as token:
            token.write(creds.to_json())

    return creds
