from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from .fsm import get_progress_bar, RegisterCar

router = Router()


async def show_summary(message, state: FSMContext):
    data = await state.get_data()
    summary = (
        f"üöö **–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ:**\n"
        f"–¢–∏–ø: {data.get('car_type') or '-'}\n"
        f"–ù–æ–º–µ—Ä(–∏): {data.get('plate_number') or '-'}\n"
        f"–í–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω—ñ—Å—Ç—å: {data.get('weight_capacity') or '-'}\n"
        f"–û–± º—î–º: {data.get('volume') or '-'}\n"
        f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {', '.join(data.get('loading_type') or [])}\n"
        f"–í–æ–¥—ñ–π: {data.get('driver_fullname') or '-'}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('driver_phone') or '-'}\n" + get_progress_bar(data)
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ó–±–µ—Ä–µ–≥—Ç–∏", callback_data="car_save"),
                InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", callback_data="car_edit"),
            ],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="car_back")],
        ]
    )

    await message.answer(summary, reply_markup=keyboard)
    await message.answer(summary, reply_markup=None)


@router.callback_query(F.data == "car_save")
async def save_car(callback: CallbackQuery, state: FSMContext):
    # –¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –ë–î, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    await callback.message.edit_text("‚úÖ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!", reply_markup=None)
    await state.clear()


@router.callback_query(F.data == "car_back")
async def go_back(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("‚¨ÖÔ∏è –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–æ–¥—ñ—è —â–µ —Ä–∞–∑:")
    await state.set_state(RegisterCar.driver_phone)
