from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from .fsm import RegisterCar
from .fsm_helpers import go_to_next_step
from .edit import handle_editing_step

router = Router()


@router.callback_query(RegisterCar.loading_type)
async def choose_loading(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    loading: set = data.get("loading_type", set())

    option_map = {
        "load_side": "–ë—ñ–∫",
        "load_top": "–í–µ—Ä—Ö",
        "load_back": "–ó–∞–¥",
    }

    if callback.data == "load_done":
        # üîç —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —á–∏ –∑–≤–∏—á–∞–π–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è?
        if "edit_queue" in data:
            await handle_editing_step(
                state, "loading_type", list(loading), callback.message
            )
        else:
            await state.update_data(loading_type=list(loading))
            await go_to_next_step(state, "loading_type", callback.message)

        await callback.answer()
        return

    if callback.data in option_map:
        option = option_map[callback.data]
        if option in loading:
            loading.remove(option)
        else:
            loading.add(option)
        await state.update_data(loading_type=loading)

        await callback.message.edit_text(
            f"–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:\n–í–∏–±—Ä–∞–Ω–æ: {', '.join(loading) or '–Ω—ñ—á–æ–≥–æ'}",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ë—ñ–∫", callback_data="load_side")],
                    [InlineKeyboardButton(text="–í–µ—Ä—Ö", callback_data="load_top")],
                    [InlineKeyboardButton(text="–ó–∞–¥", callback_data="load_back")],
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –≤–∏–±—ñ—Ä", callback_data="load_done"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –ø—É–Ω–∫—Ç",
                            callback_data="skip_loading_type",
                        )
                    ],
                ]
            ),
        )
