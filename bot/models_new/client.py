"""
üì¶ –ú–û–î–ï–õ–¨ –ö–õ–Ü–Ñ–ù–¢–ê –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º mixins
"""

from sqlalchemy.orm import Mapped, relationship
from sqlalchemy import String
from typing import List, Optional

from bot.models_new.base import (
    BaseModel,
    TimestampMixin,
    VerifiableMixin,
    TelegramUserMixin,
)
from bot.models_new.mixins import ContactInfoMixin, CompanyInfoMixin
from bot.models_new import ShipmentRequest, SheetBinding


class Client(
    BaseModel,  # –ù–∞—Å–ª—ñ–¥—É—î–º–æ id —Ç–∞ –±–∞–∑–æ–≤—ñ –º–µ—Ç–æ–¥–∏
    TimestampMixin,  # –î–æ–¥–∞—î–º–æ created_at, updated_at
    VerifiableMixin,  # –î–æ–¥–∞—î–º–æ is_verified
    TelegramUserMixin,  # –î–æ–¥–∞—î–º–æ telegram_id
    ContactInfoMixin,  # –î–æ–¥–∞—î–º–æ full_name, phone, email
    CompanyInfoMixin,  # –î–æ–¥–∞—î–º–æ company_name, tax_id —Ç–æ—â–æ
):
    """
    üéØ –ö–û–ú–ü–û–ó–ò–¶–Ü–Ø —á–µ—Ä–µ–∑ Multiple Inheritance (–º–Ω–æ–∂–∏–Ω–Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è)

    –ü—Ä–∏–Ω—Ü–∏–ø–∏ –û–û–ü —Ç—É—Ç:
    1. –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è - –æ—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –≤—ñ–¥ 6 –∫–ª–∞—Å—ñ–≤
    2. –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è - —Å–∫–ª–∞–¥–∞—î–º–æ –∫–ª–∞—Å –∑ –≥–æ—Ç–æ–≤–∏—Ö –±–ª–æ–∫—ñ–≤
    3. DRY - –Ω–µ –¥—É–±–ª—é—î–º–æ –∫–æ–¥

    –ü–∞—Ç–µ—Ä–Ω: Entity (—Å—É—Ç–Ω—ñ—Å—Ç—å) –∑ Domain-Driven Design
    """

    __tablename__ = "clients"

    # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞
    # (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ)

    # üîó –í–Ü–î–ù–û–®–ï–ù–ù–Ø (Relationships)
    shipment_requests: Mapped[List["ShipmentRequest"]] = relationship(
        "ShipmentRequest",
        back_populates="client",
        cascade="all, delete-orphan",  # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞—è–≤–∫–∏ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞
        lazy="dynamic",  # Lazy loading - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    )

    sheet_bindings: Mapped[List["SheetBinding"]] = relationship(
        "SheetBinding",
        primaryjoin="and_(Client.id==SheetBinding.owner_id, SheetBinding.owner_type=='client')",
        foreign_keys="[SheetBinding.owner_id]",
        viewonly=True,  # Read-only –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è
    )

    # üîß –ú–ï–¢–û–î–ò –ö–õ–ê–°–£ (–±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∞)

    def can_create_shipment(self) -> bool:
        """
        –ú–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ –º–æ–∂–µ –∫–ª—ñ—î–Ω—Ç —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–∞—è–≤–∫–∏
        –Ü–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—è –±—ñ–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª
        """
        return self.is_verified

    @property
    def display_name(self) -> str:
        """
        Property - —Ü–µ —Å–ø–æ—Å—ñ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±—á–∏—Å–ª—é–≤–∞–Ω–µ –ø–æ–ª–µ
        –í–∏–≥–ª—è–¥–∞—î —è–∫ –∞—Ç—Ä–∏–±—É—Ç, –∞–ª–µ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ —Ü–µ –º–µ—Ç–æ–¥
        """
        if self.company_name:
            return f"{self.company_name} ({self.full_name})"
        return self.full_name

    def __str__(self) -> str:
        """–ú–∞–≥—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è"""
        return self.display_name
