"""
ü§ñ TELEGRAM –°–ü–ï–¶–ò–§–Ü–ß–ù–Ü MIXINS
"""

from sqlalchemy.orm import Mapped, mapped_column, declared_attr
from sqlalchemy import BigInteger, String, Boolean
from typing import Optional


class TelegramUserMixin:
    """
    –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑ Telegram

    –ß–æ–º—É –æ–∫—Ä–µ–º–æ:
    - –¶–µ —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞ –º–µ—Å–µ–Ω–¥–∂–µ—Ä–∞
    - –ù–µ –≤—Å—ñ –º–æ–¥–µ–ª—ñ –ø—Ä–∏–≤'—è–∑–∞–Ω—ñ –¥–æ Telegram
    - –õ–µ–≥–∫–æ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —ñ–Ω—à–∏–π –º–µ—Å–µ–Ω–¥–∂–µ—Ä
    """

    @declared_attr
    def telegram_id(cls) -> Mapped[int]:
        return mapped_column(
            BigInteger,  # BigInteger –±–æ Telegram ID –º–æ–∂–µ –±—É—Ç–∏ –≤–µ–ª–∏–∫–∏–º
            unique=True,
            nullable=False,
            index=True,
            comment="Telegram User ID",
        )

    @declared_attr
    def telegram_username(cls) -> Mapped[Optional[str]]:
        return mapped_column(
            String(32),  # Max 32 —Å–∏–º–≤–æ–ª–∏ –≤ Telegram
            nullable=True,
            index=True,
            comment="Telegram username –±–µ–∑ @",
        )

    @declared_attr
    def telegram_first_name(cls) -> Mapped[Optional[str]]:
        return mapped_column(
            String(64), nullable=True, comment="–Ü–º'—è –∑ Telegram –ø—Ä–æ—Ñ—ñ–ª—é"
        )

    @declared_attr
    def telegram_last_name(cls) -> Mapped[Optional[str]]:
        return mapped_column(
            String(64), nullable=True, comment="–ü—Ä—ñ–∑–≤–∏—â–µ –∑ Telegram –ø—Ä–æ—Ñ—ñ–ª—é"
        )

    @declared_attr
    def is_bot_blocked(cls) -> Mapped[bool]:
        """–ß–∏ –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞"""
        return mapped_column(
            Boolean,
            default=False,
            nullable=False,
            comment="True —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞",
        )
